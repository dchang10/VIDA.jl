var documenterSearchIndex = {"docs":
[{"location":"getting_started/#Getting-Started-1","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"The best way to learn how to use LaVIDA is to look at some of the example notebooks provided.","category":"page"},{"location":"getting_started/#Installation-1","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"LaVIDA isn't yet registered. To install the pkg type","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"using Pkg; Pkg.add(PackageSpec(url=\"https://github.com/ptiede/LaVIDA.jl.git\"))","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Or go to the repl and simply type ]add https://github.com/ptiede/LaVIDA.jl.git.","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Some additional dependencies that enable full functionality can be added with","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Pkg.add.([\"Optim\",\"PyPlot\",\"FITSIO\",\"ArgParse\"])","category":"page"},{"location":"getting_started/#Idea-behind-LaVIDA-1","page":"Getting Started","title":"Idea behind LaVIDA","text":"","category":"section"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"LaVIDA is based on the idea of intrepreting the image as a probility distribution. Namely since any image is integrable, the space of images is in one-to-one correspondence with a probability distribution, especially since the total flux of the image is already known a priori.","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Therefore, our idea is very close to variational inference, hence the name (the) Variational Image Domain Analysis. Namely, where we view the image as a distribution and we aim to find a approximation of the distribution given some parameteric family f_theta(xy), which for our purproses we will typically call a filter. ","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"The choice of filter, depends on the problem of interest, namely what features we are interested in. Typically for the EHT where our images tend to be rings, we are interested in","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Radius r₀\nWidth or half width σ\nStructural asymmetry τ\nFlux asymmetry s\nPosition angle ξ","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"LaVIDA then defines a series of filters parameterize these features.","category":"page"},{"location":"getting_started/#Filters-1","page":"Getting Started","title":"Filters","text":"","category":"section"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Currently we have 5 filters defined, although they all belong to the same family. For an example on how to see the process for defining your own filter please see the readme.","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"The filters implemented are:","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"GaussianRing which is a symmetric and circular Gaussian ring.\nSlashedGaussianRing which is a circular Gaussian ring with a flux gradient across its emission.\nEllipticalGaussianRing symmetric Gaussian elliptical ring, where the emission is constant across the ring, unlike with the SlashedGaussianRing.\nGeneralGaussianRing A combination of the two above where the ring is allowed to be elliptical and have a intensity gradient.\nTIDAGaussianRing The GeneralGaussianRing, but where the asymmetry and flux orienation are fixed relative to one another.\nAsymGaussian A asymmetric Gaussian blob. This can be useful if you image has a strong non-ring component in it.\nConstant Adds a constant flux floor to the image. This is very helpful for image reconstructions that tend to add small scale flux everywhere in the image.","category":"page"},{"location":"getting_started/#Divergences-1","page":"Getting Started","title":"Divergences","text":"","category":"section"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"In order to extract features we first need a cost function that penalized our parameterized distributions f_theta(xy). Since we are considering the image as a probability distribution, one cost function would be the distance or divergence between two distributions. A probability divergence is just a functional that takes in two probability distributions p,q and is minimized iff pequiv q.","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Currently we have two divergences implemented in LaVIDA","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Bhattacharyya divergence (Bh)","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":" Bh(f_thetaI) = int sqrtf_theta(xy)I(xy) dxdy","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"KL divergence ","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":" KL(f_thetaI) = int f_theta(xy)logleft(fracf_theta(xy)I(xy)right)dxdy ","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"Both divergences give very similar answers, although we found the BH to be easier to maximize.","category":"page"},{"location":"getting_started/#","page":"Getting Started","title":"Getting Started","text":"For an example of how all this all works is given in the examples folder.","category":"page"},{"location":"function_index/#API-1","page":"API","title":"API","text":"","category":"section"},{"location":"function_index/#","page":"API","title":"API","text":"","category":"page"},{"location":"function_index/#","page":"API","title":"API","text":"Modules = [VIDA]","category":"page"},{"location":"#LaVIDA.jl-1","page":"Home","title":"LaVIDA.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Variational image domain analysis for the EHT.  This package is for extracting features, such as ring from image reconstruction of EHT data. Currently these images must be in fits format although other types  my be included in the future.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"In order to extract features we use probability divergences to characterize differences between our image and some approximation. For the divergences implemented see the Getting Started page. The idea is then very  similar to variational inferences where we pick a parametric family of distributions which we call filters and then try to find the filter that minimizes the divergence. For the filters that are currently implemented  please see the page.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"See the for the complete list of documented functions and types.","category":"page"},{"location":"#Outline-1","page":"Home","title":"Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n  \"index.md\",\n  \"getting_started.md\",\n  \"function_index.md\"\n]","category":"page"}]
}
